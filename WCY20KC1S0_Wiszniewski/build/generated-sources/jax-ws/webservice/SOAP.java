
package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SOAP", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SOAP {


    /**
     * 
     * @param tekst
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "generuj", targetNamespace = "http://WebService/", className = "webservice.Generuj")
    @ResponseWrapper(localName = "generujResponse", targetNamespace = "http://WebService/", className = "webservice.GenerujResponse")
    @Action(input = "http://WebService/SOAP/generujRequest", output = "http://WebService/SOAP/generujResponse")
    public String generuj(
        @WebParam(name = "tekst", targetNamespace = "")
        String tekst);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "wyswietl", targetNamespace = "http://WebService/", className = "webservice.Wyswietl")
    @ResponseWrapper(localName = "wyswietlResponse", targetNamespace = "http://WebService/", className = "webservice.WyswietlResponse")
    @Action(input = "http://WebService/SOAP/wyswietlRequest", output = "http://WebService/SOAP/wyswietlResponse")
    public String wyswietl();

    /**
     * 
     * @param autor
     * @param hash
     */
    @WebMethod
    @RequestWrapper(localName = "wstaw", targetNamespace = "http://WebService/", className = "webservice.Wstaw")
    @ResponseWrapper(localName = "wstawResponse", targetNamespace = "http://WebService/", className = "webservice.WstawResponse")
    @Action(input = "http://WebService/SOAP/wstawRequest", output = "http://WebService/SOAP/wstawResponse")
    public void wstaw(
        @WebParam(name = "autor", targetNamespace = "")
        String autor,
        @WebParam(name = "hash", targetNamespace = "")
        String hash);

    /**
     * 
     * @param id
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "pobierz", targetNamespace = "http://WebService/", className = "webservice.Pobierz")
    @ResponseWrapper(localName = "pobierzResponse", targetNamespace = "http://WebService/", className = "webservice.PobierzResponse")
    @Action(input = "http://WebService/SOAP/pobierzRequest", output = "http://WebService/SOAP/pobierzResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://WebService/SOAP/pobierz/Fault/IOException")
    })
    public void pobierz(
        @WebParam(name = "id", targetNamespace = "")
        String id)
        throws IOException_Exception
    ;

    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "usun", targetNamespace = "http://WebService/", className = "webservice.Usun")
    @ResponseWrapper(localName = "usunResponse", targetNamespace = "http://WebService/", className = "webservice.UsunResponse")
    @Action(input = "http://WebService/SOAP/usunRequest", output = "http://WebService/SOAP/usunResponse")
    public void usun(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
